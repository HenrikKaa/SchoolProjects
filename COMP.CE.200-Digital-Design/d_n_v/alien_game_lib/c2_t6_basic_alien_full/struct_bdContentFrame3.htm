<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head>
<title></title>
<link rel="Stylesheet" title="hdl2html stylesheet" media="Screen" href="../../scripts/hdl2html.css">
<!-- Generated by HDL Designer -->
<!--    at 22:28:56 on 10/09/20 -->
<script language='javascript'>
function pagesBtn() {
   return '';
}
function panelmenu() {
   return '';
}
</script>
</head>
<body>
<pre>
<span class=C>-- VHDL Entity alien_game_lib.c2_t6_basic_alien_full.symbol</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - kaakkola.kaakkola (linux-desktop9.tuni.fi)</span>
<span class=C>--          at - 17:49:40 10&#47;04&#47;20</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>ENTITY</span> c2_t6_basic_alien_full <span class=K>IS</span>
   <span class=K>PORT</span>(
      clk       : <span class=A>IN</span>     <span class=T>std_logic</span>;
      enable    : <span class=A>IN</span>     <span class=T>std_logic</span>;
      hit       : <span class=A>IN</span>     <span class=T>std_logic</span>;
      rst_n     : <span class=A>IN</span>     <span class=T>std_logic</span>;
      color_bgr : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (23 <span class=K>DOWNTO</span> 0);
      defeated  : <span class=A>OUT</span>    <span class=T>std_logic</span>;
      x_coord   : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      y_coord   : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0)
   );

<span class=C>-- Declarations</span>

<span class=K>END</span> c2_t6_basic_alien_full ;

<span class=C>--</span>
<span class=C>-- VHDL Architecture alien_game_lib.c2_t6_basic_alien_full.struct</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - kaakkola.kaakkola (linux-desktop9.tuni.fi)</span>
<span class=C>--          at - 18:22:49 10&#47;04&#47;20</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>LIBRARY</span> alien_game_lib;

<span class=K>ARCHITECTURE</span> struct <span class=K>OF</span> c2_t6_basic_alien_full <span class=K>IS</span>

   <span class=C>-- Architecture declarations</span>

   <span class=C>-- Internal signal declarations</span>
   <span class=K>SIGNAL</span> change    : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> direction : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout      : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> x_coord1  : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);

   <span class=C>-- Implicit buffer signal declarations</span>
   <span class=K>SIGNAL</span> x_coord_internal : <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);


   <span class=C>-- ModuleWare signal declarations(v1.12) for instance 'U_0' of 'adff'</span>
   <span class=K>SIGNAL</span> mw_U_0reg_cval : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);

   <span class=C>-- Component Declarations</span>
   <span class=K>COMPONENT</span> c2_t6_alien_direction
   <span class=K>PORT</span> (
      change    : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      clk       : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      rst_n     : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      direction : <span class=A>OUT</span>    <span class=T>std_logic</span>
   );
   <span class=K>END</span> <span class=K>COMPONENT</span>;
   <span class=K>COMPONENT</span> c2_t6_alien_is_hit
   <span class=K>PORT</span> (
      clk            : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      hit            : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      rst_n          : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      alien_col      : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (23 <span class=K>DOWNTO</span> 0);
      alien_defeated : <span class=A>OUT</span>    <span class=T>std_logic</span>
   );
   <span class=K>END</span> <span class=K>COMPONENT</span>;
   <span class=K>COMPONENT</span> c2_t6_coordinate
   <span class=K>PORT</span> (
      direction : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      place_x   : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      x_coord   : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      y_coord   : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0)
   );
   <span class=K>END</span> <span class=K>COMPONENT</span>;
   <span class=K>COMPONENT</span> c2_t6_trigger_direction_change
   <span class=K>PORT</span> (
      change_in : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      x_coord   : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      change    : <span class=A>OUT</span>    <span class=T>std_logic</span>
   );
   <span class=K>END</span> <span class=K>COMPONENT</span>;

   <span class=C>-- Optional embedded configurations</span>
   <span class=C>-- pragma synthesis_off</span>
   <span class=K>FOR</span> <span class=K>ALL</span> : c2_t6_alien_direction <span class=K>USE</span> <span class=K>ENTITY</span> alien_game_lib.c2_t6_alien_direction;
   <span class=K>FOR</span> <span class=K>ALL</span> : c2_t6_alien_is_hit <span class=K>USE</span> <span class=K>ENTITY</span> alien_game_lib.c2_t6_alien_is_hit;
   <span class=K>FOR</span> <span class=K>ALL</span> : c2_t6_coordinate <span class=K>USE</span> <span class=K>ENTITY</span> alien_game_lib.c2_t6_coordinate;
   <span class=K>FOR</span> <span class=K>ALL</span> : c2_t6_trigger_direction_change <span class=K>USE</span> <span class=K>ENTITY</span> alien_game_lib.c2_t6_trigger_direction_change;
   <span class=C>-- pragma synthesis_on</span>


<span class=K>BEGIN</span>

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_0' of 'adff'</span>
   x_coord_internal <= mw_U_0reg_cval;
   u_0seq_proc: <span class=K>PROCESS</span> (clk, rst_n)
   <span class=K>BEGIN</span>
      <span class=K>IF</span> (rst_n = '0') <span class=K>THEN</span>
         mw_U_0reg_cval <= <span class=S>"00001000"</span>;
      <span class=K>ELSIF</span> (clk'<span class=A>EVENT</span> <span class=K>AND</span> clk='1') <span class=K>THEN</span>
         <span class=K>IF</span> (enable = '1') <span class=K>THEN</span>
            mw_U_0reg_cval <= x_coord1;
         <span class=K>END</span> <span class=K>IF</span>;
      <span class=K>END</span> <span class=K>IF</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_0seq_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_4' of 'constval'</span>
   dout <= '0';

   <span class=C>-- Instance port mappings.</span>
   U_3 : c2_t6_alien_direction
      <span class=K>PORT</span> <span class=K>MAP</span> (
         change    => change,
         clk       => enable,
         rst_n     => rst_n,
         direction => direction
      );
   U_6 : c2_t6_alien_is_hit
      <span class=K>PORT</span> <span class=K>MAP</span> (
         clk            => clk,
         hit            => hit,
         rst_n          => rst_n,
         alien_col      => color_bgr,
         alien_defeated => defeated
      );
   U_1 : c2_t6_coordinate
      <span class=K>PORT</span> <span class=K>MAP</span> (
         direction => direction,
         place_x   => x_coord_internal,
         x_coord   => x_coord1,
         y_coord   => y_coord
      );
   U_2 : c2_t6_trigger_direction_change
      <span class=K>PORT</span> <span class=K>MAP</span> (
         change_in => dout,
         x_coord   => x_coord_internal,
         change    => change
      );

   <span class=C>-- Implicit buffered output assignments</span>
   x_coord <= x_coord_internal;

<span class=K>END</span> struct;</pre>
<SCRIPT SRC="../../scripts/is.js"></SCRIPT><SCRIPT SRC="../../scripts/imageFrame.js"></SCRIPT>
</body>
