<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head>
<title></title>
<link rel="Stylesheet" title="hdl2html stylesheet" media="Screen" href="../../scripts/hdl2html.css">
<!-- Generated by HDL Designer -->
<!--    at 11:37:18 on 12/04/20 -->
<script language='javascript'>
function pagesBtn() {
   return '';
}
function panelmenu() {
   return '';
}
</script>
</head>
<body>
<pre>
<span class=C>-- VHDL Entity alien_game_lib.c2_t6_coordinate.symbol</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - kaakkola.kaakkola (linux-desktop2.tuni.fi)</span>
<span class=C>--          at - 13:25:24 11&#47;27&#47;20</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>ENTITY</span> c2_t6_coordinate <span class=K>IS</span>
   <span class=K>PORT</span>(
      direction : <span class=A>IN</span>     <span class=T>std_logic</span>;
      place_x   : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      place_y   : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      x_coord   : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      y_coord   : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0)
   );

<span class=C>-- Declarations</span>

<span class=K>END</span> c2_t6_coordinate ;

<span class=C>--</span>
<span class=C>-- VHDL Architecture alien_game_lib.c2_t6_coordinate.struct</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - kaakkola.kaakkola (linux-desktop2.tuni.fi)</span>
<span class=C>--          at - 13:25:24 11&#47;27&#47;20</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>LIBRARY</span> alien_game_lib;

<span class=K>ARCHITECTURE</span> struct <span class=K>OF</span> c2_t6_coordinate <span class=K>IS</span>

   <span class=C>-- Architecture declarations</span>

   <span class=C>-- Internal signal declarations</span>
   <span class=K>SIGNAL</span> data_out  : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> data_out1 : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> data_out2 : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);

   <span class=C>-- Implicit buffer signal declarations</span>
   <span class=K>SIGNAL</span> x_coord_internal : <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);


   <span class=C>-- Component Declarations</span>
   <span class=K>COMPONENT</span> c2_t2_left_shifter
   <span class=K>PORT</span> (
      data_in  : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      data_out : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0)
   );
   <span class=K>END</span> <span class=K>COMPONENT</span>;
   <span class=K>COMPONENT</span> c2_t4_right_shifter
   <span class=K>PORT</span> (
      data_in  : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      data_out : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0)
   );
   <span class=K>END</span> <span class=K>COMPONENT</span>;

   <span class=C>-- Optional embedded configurations</span>
   <span class=C>-- pragma synthesis_off</span>
   <span class=K>FOR</span> <span class=K>ALL</span> : c2_t2_left_shifter <span class=K>USE</span> <span class=K>ENTITY</span> alien_game_lib.c2_t2_left_shifter;
   <span class=K>FOR</span> <span class=K>ALL</span> : c2_t4_right_shifter <span class=K>USE</span> <span class=K>ENTITY</span> alien_game_lib.c2_t4_right_shifter;
   <span class=C>-- pragma synthesis_on</span>


<span class=K>BEGIN</span>

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_2' of 'mux'</span>
   u_2combo_proc: <span class=K>PROCESS</span>(data_out, data_out1, direction)
   <span class=K>BEGIN</span>
      <span class=K>CASE</span> direction <span class=K>IS</span>
      <span class=K>WHEN</span> '0' => x_coord_internal <= data_out;
      <span class=K>WHEN</span> '1' => x_coord_internal <= data_out1;
      <span class=K>WHEN</span> <span class=K>OTHERS</span> => x_coord_internal <= (<span class=K>OTHERS</span> => 'X');
      <span class=K>END</span> <span class=K>CASE</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_2combo_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_4' of 'mux'</span>
   u_4combo_proc: <span class=K>PROCESS</span>(place_y, data_out2, x_coord_internal)
   <span class=K>BEGIN</span>
      <span class=K>CASE</span> x_coord_internal(0) <span class=K>IS</span>
      <span class=K>WHEN</span> '0' => y_coord <= place_y;
      <span class=K>WHEN</span> '1' => y_coord <= data_out2;
      <span class=K>WHEN</span> <span class=K>OTHERS</span> => y_coord <= (<span class=K>OTHERS</span> => 'X');
      <span class=K>END</span> <span class=K>CASE</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_4combo_proc;

   <span class=C>-- Instance port mappings.</span>
   U_1 : c2_t2_left_shifter
      <span class=K>PORT</span> <span class=K>MAP</span> (
         data_in  => place_x,
         data_out => data_out1
      );
   U_3 : c2_t2_left_shifter
      <span class=K>PORT</span> <span class=K>MAP</span> (
         data_in  => place_y,
         data_out => data_out2
      );
   U_0 : c2_t4_right_shifter
      <span class=K>PORT</span> <span class=K>MAP</span> (
         data_in  => place_x,
         data_out => data_out
      );

   <span class=C>-- Implicit buffered output assignments</span>
   x_coord <= x_coord_internal;

<span class=K>END</span> struct;</pre>
<SCRIPT SRC="../../scripts/is.js"></SCRIPT><SCRIPT SRC="../../scripts/imageFrame.js"></SCRIPT>
</body>
