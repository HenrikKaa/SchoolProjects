<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head>
<title></title>
<link rel="Stylesheet" title="hdl2html stylesheet" media="Screen" href="../../scripts/hdl2html.css">
<!-- Generated by HDL Designer -->
<!--    at 11:37:37 on 12/04/20 -->
<script language='javascript'>
function pagesBtn() {
   return '';
}
function panelmenu() {
   return '';
}
</script>
</head>
<body>
<pre>
<span class=C>-- VHDL Entity alien_game_lib.c6_t2_improved_alien_lives.symbol</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - kaakkola.kaakkola (linux-desktop2.tuni.fi)</span>
<span class=C>--          at - 17:25:21 11&#47;27&#47;20</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>ENTITY</span> c6_t2_improved_alien_lives <span class=K>IS</span>
   <span class=K>PORT</span>(
      clk               : <span class=A>IN</span>     <span class=T>std_logic</span>;
      hit               : <span class=A>IN</span>     <span class=T>std_logic</span>;
      rst_n             : <span class=A>IN</span>     <span class=T>std_logic</span>;
      alien_is_defeated : <span class=A>OUT</span>    <span class=T>std_logic</span>;
      color_decider     : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (1 <span class=K>DOWNTO</span> 0)
   );

<span class=C>-- Declarations</span>

<span class=K>END</span> c6_t2_improved_alien_lives ;

<span class=C>--</span>
<span class=C>-- VHDL Architecture alien_game_lib.c6_t2_improved_alien_lives.struct</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - kaakkola.kaakkola (linux-desktop2.tuni.fi)</span>
<span class=C>--          at - 17:25:20 11&#47;27&#47;20</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>LIBRARY</span> alien_game_lib;

<span class=K>ARCHITECTURE</span> struct <span class=K>OF</span> c6_t2_improved_alien_lives <span class=K>IS</span>

   <span class=C>-- Architecture declarations</span>

   <span class=C>-- Internal signal declarations</span>
   <span class=K>SIGNAL</span> carry : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout  : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout1 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout2 : <span class=T>std_logic_vector</span>(1 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> dout3 : <span class=T>std_logic_vector</span>(1 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> sum   : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> sum1  : <span class=T>std_logic</span>;

   <span class=C>-- Implicit buffer signal declarations</span>
   <span class=K>SIGNAL</span> alien_is_defeated_internal : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> color_decider_internal     : <span class=T>std_logic_vector</span> (1 <span class=K>DOWNTO</span> 0);


   <span class=C>-- ModuleWare signal declarations(v1.12) for instance 'U_1' of 'adff'</span>
   <span class=K>SIGNAL</span> mw_U_1reg_cval : <span class=T>std_logic_vector</span>(1 <span class=K>DOWNTO</span> 0);

   <span class=C>-- Component Declarations</span>
   <span class=K>COMPONENT</span> full_adder
   <span class=K>PORT</span> (
      sw0   : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      sw1   : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      sw2   : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      carry : <span class=A>OUT</span>    <span class=T>std_logic</span> ;
      sum   : <span class=A>OUT</span>    <span class=T>std_logic</span>
   );
   <span class=K>END</span> <span class=K>COMPONENT</span>;

   <span class=C>-- Optional embedded configurations</span>
   <span class=C>-- pragma synthesis_off</span>
   <span class=K>FOR</span> <span class=K>ALL</span> : full_adder <span class=K>USE</span> <span class=K>ENTITY</span> alien_game_lib.full_adder;
   <span class=C>-- pragma synthesis_on</span>


<span class=K>BEGIN</span>

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_1' of 'adff'</span>
   color_decider_internal <= mw_U_1reg_cval;
   u_1seq_proc: <span class=K>PROCESS</span> (clk, rst_n)
   <span class=K>BEGIN</span>
      <span class=K>IF</span> (rst_n = '0') <span class=K>THEN</span>
         mw_U_1reg_cval <= <span class=S>"00"</span>;
      <span class=K>ELSIF</span> (clk'<span class=A>EVENT</span> <span class=K>AND</span> clk='1') <span class=K>THEN</span>
         mw_U_1reg_cval <= dout2;
      <span class=K>END</span> <span class=K>IF</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_1seq_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_9' of 'and'</span>
   alien_is_defeated_internal <= color_decider_internal(0)
                                 <span class=K>AND</span> color_decider_internal(1);

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_7' of 'constval'</span>
   dout1 <= '0';

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_8' of 'constval'</span>
   dout <= '0';

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_6' of 'merge'</span>
   dout3 <= sum1 & sum;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_0' of 'mux'</span>
   u_0combo_proc: <span class=K>PROCESS</span>(dout3, color_decider_internal,
                          alien_is_defeated_internal)
   <span class=K>BEGIN</span>
      <span class=K>CASE</span> alien_is_defeated_internal <span class=K>IS</span>
      <span class=K>WHEN</span> '0' => dout2 <= dout3;
      <span class=K>WHEN</span> '1' => dout2 <= color_decider_internal;
      <span class=K>WHEN</span> <span class=K>OTHERS</span> => dout2 <= (<span class=K>OTHERS</span> => 'X');
      <span class=K>END</span> <span class=K>CASE</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_0combo_proc;

   <span class=C>-- Instance port mappings.</span>
   U_2 : full_adder
      <span class=K>PORT</span> <span class=K>MAP</span> (
         sw0   => color_decider_internal(0),
         sw1   => hit,
         sw2   => dout1,
         carry => carry,
         sum   => sum
      );
   U_4 : full_adder
      <span class=K>PORT</span> <span class=K>MAP</span> (
         sw0   => color_decider_internal(1),
         sw1   => carry,
         sw2   => dout,
         carry => <span class=K>OPEN</span>,
         sum   => sum1
      );

   <span class=C>-- Implicit buffered output assignments</span>
   alien_is_defeated <= alien_is_defeated_internal;
   color_decider     <= color_decider_internal;

<span class=K>END</span> struct;</pre>
<SCRIPT SRC="../../scripts/is.js"></SCRIPT><SCRIPT SRC="../../scripts/imageFrame.js"></SCRIPT>
</body>
