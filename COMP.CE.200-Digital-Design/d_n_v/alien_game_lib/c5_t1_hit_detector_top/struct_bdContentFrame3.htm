<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head>
<title></title>
<link rel="Stylesheet" title="hdl2html stylesheet" media="Screen" href="../../scripts/hdl2html.css">
<!-- Generated by HDL Designer -->
<!--    at 11:37:29 on 12/04/20 -->
<script language='javascript'>
function pagesBtn() {
   return '';
}
function panelmenu() {
   return '';
}
</script>
</head>
<body>
<pre>
<span class=C>-- VHDL Entity alien_game_lib.c5_t1_hit_detector_top.symbol</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - kaakkola.kaakkola (linux-desktop5.tuni.fi)</span>
<span class=C>--          at - 14:30:46 11&#47;06&#47;20</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>ENTITY</span> c5_t1_hit_detector_top <span class=K>IS</span>
   <span class=K>PORT</span>(
      alien_x  : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      alien_y  : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      bullet_x : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      bullet_y : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      clk      : <span class=A>IN</span>     <span class=T>std_logic</span>;
      rst_n    : <span class=A>IN</span>     <span class=T>std_logic</span>;
      hit      : <span class=A>OUT</span>    <span class=T>std_logic</span>
   );

<span class=C>-- Declarations</span>

<span class=K>END</span> c5_t1_hit_detector_top ;

<span class=C>--</span>
<span class=C>-- VHDL Architecture alien_game_lib.c5_t1_hit_detector_top.struct</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - kaakkola.kaakkola (linux-desktop5.tuni.fi)</span>
<span class=C>--          at - 15:08:18 11&#47;06&#47;20</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;


<span class=K>ARCHITECTURE</span> struct <span class=K>OF</span> c5_t1_hit_detector_top <span class=K>IS</span>

   <span class=C>-- Architecture declarations</span>

   <span class=C>-- Internal signal declarations</span>
   <span class=K>SIGNAL</span> din1  : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout  : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> dout1 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout2 : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> dout3 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout4 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> q     : <span class=T>std_logic</span>;


   <span class=C>-- ModuleWare signal declarations(v1.12) for instance 'U_0' of 'adff'</span>
   <span class=K>SIGNAL</span> mw_U_0reg_cval : <span class=T>std_logic</span>;


<span class=K>BEGIN</span>

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_0' of 'adff'</span>
   q <= mw_U_0reg_cval;
   u_0seq_proc: <span class=K>PROCESS</span> (clk, rst_n)
   <span class=K>BEGIN</span>
      <span class=K>IF</span> (rst_n = '0') <span class=K>THEN</span>
         mw_U_0reg_cval <= '0';
      <span class=K>ELSIF</span> (clk'<span class=A>EVENT</span> <span class=K>AND</span> clk='1') <span class=K>THEN</span>
         mw_U_0reg_cval <= dout3;
      <span class=K>END</span> <span class=K>IF</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_0seq_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_3' of 'and'</span>
   dout1 <= dout(7) <span class=K>AND</span> dout(6) <span class=K>AND</span> dout(5) <span class=K>AND</span> dout(4) <span class=K>AND</span> dout(3)
            <span class=K>AND</span> dout(2) <span class=K>AND</span> dout(1) <span class=K>AND</span> dout(0);

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_4' of 'and'</span>
   dout3 <= dout1 <span class=K>AND</span> din1;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_5' of 'and'</span>
   hit <= dout3 <span class=K>AND</span> dout4;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_6' of 'and'</span>
   din1 <= dout2(7) <span class=K>AND</span> dout2(6) <span class=K>AND</span> dout2(5) <span class=K>AND</span> dout2(4) <span class=K>AND</span> dout2(3)
           <span class=K>AND</span> dout2(2) <span class=K>AND</span> dout2(1) <span class=K>AND</span> dout2(0);

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_7' of 'inv'</span>
   dout4 <= <span class=K>NOT</span>(q);

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_1' of 'xnor'</span>
   dout <= <span class=K>NOT</span>(alien_x <span class=K>XOR</span> bullet_x);

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_2' of 'xnor'</span>
   dout2 <= <span class=K>NOT</span>(alien_y <span class=K>XOR</span> bullet_y);

   <span class=C>-- Instance port mappings.</span>

<span class=K>END</span> struct;</pre>
<SCRIPT SRC="../../scripts/is.js"></SCRIPT><SCRIPT SRC="../../scripts/imageFrame.js"></SCRIPT>
</body>
