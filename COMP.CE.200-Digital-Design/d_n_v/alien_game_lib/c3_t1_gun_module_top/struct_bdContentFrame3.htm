<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head>
<title></title>
<link rel="Stylesheet" title="hdl2html stylesheet" media="Screen" href="../../scripts/hdl2html.css">
<!-- Generated by HDL Designer -->
<!--    at 11:37:21 on 12/04/20 -->
<script language='javascript'>
function pagesBtn() {
   return '';
}
function panelmenu() {
   return '';
}
</script>
</head>
<body>
<pre>
<span class=C>-- VHDL Entity alien_game_lib.c3_t1_gun_module_top.symbol</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - kaakkola.kaakkola (linux-desktop9.tuni.fi)</span>
<span class=C>--          at - 15:06:03 11&#47;23&#47;20</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>ENTITY</span> c3_t1_gun_module_top <span class=K>IS</span>
   <span class=K>PORT</span>(
      btn        : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (3 <span class=K>DOWNTO</span> 0);
      clk        : <span class=A>IN</span>     <span class=T>std_logic</span>;
      enable     : <span class=A>IN</span>     <span class=T>std_logic</span>;
      gun_px_idx : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (1 <span class=K>DOWNTO</span> 0);
      rst_n      : <span class=A>IN</span>     <span class=T>std_logic</span>;
      gun_col    : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (23 <span class=K>DOWNTO</span> 0);
      x_coord    : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      y_coord    : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0)
   );

<span class=C>-- Declarations</span>

<span class=K>END</span> c3_t1_gun_module_top ;

<span class=C>--</span>
<span class=C>-- VHDL Architecture alien_game_lib.c3_t1_gun_module_top.struct</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - kaakkola.kaakkola (linux-desktop9.tuni.fi)</span>
<span class=C>--          at - 15:06:03 11&#47;23&#47;20</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>LIBRARY</span> alien_game_lib;

<span class=K>ARCHITECTURE</span> struct <span class=K>OF</span> c3_t1_gun_module_top <span class=K>IS</span>

   <span class=C>-- Architecture declarations</span>

   <span class=C>-- Internal signal declarations</span>
   <span class=K>SIGNAL</span> dout     : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> q        : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> x_coord1 : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);


   <span class=C>-- ModuleWare signal declarations(v1.12) for instance 'U_2' of 'adff'</span>
   <span class=K>SIGNAL</span> mw_U_2reg_cval : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);

   <span class=C>-- Component Declarations</span>
   <span class=K>COMPONENT</span> c3_t1_gun_move
   <span class=K>PORT</span> (
      btn     : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (3 <span class=K>DOWNTO</span> 0);
      x_place : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      x_coord : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0)
   );
   <span class=K>END</span> <span class=K>COMPONENT</span>;
   <span class=K>COMPONENT</span> c3_t1_gun_pixel_decider
   <span class=K>PORT</span> (
      gun_px_idx : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (1 <span class=K>DOWNTO</span> 0);
      x_in       : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      x_coord    : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      y_coord    : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0)
   );
   <span class=K>END</span> <span class=K>COMPONENT</span>;

   <span class=C>-- Optional embedded configurations</span>
   <span class=C>-- pragma synthesis_off</span>
   <span class=K>FOR</span> <span class=K>ALL</span> : c3_t1_gun_move <span class=K>USE</span> <span class=K>ENTITY</span> alien_game_lib.c3_t1_gun_move;
   <span class=K>FOR</span> <span class=K>ALL</span> : c3_t1_gun_pixel_decider <span class=K>USE</span> <span class=K>ENTITY</span> alien_game_lib.c3_t1_gun_pixel_decider;
   <span class=C>-- pragma synthesis_on</span>


<span class=K>BEGIN</span>

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_2' of 'adff'</span>
   q <= mw_U_2reg_cval;
   u_2seq_proc: <span class=K>PROCESS</span> (clk, rst_n)
   <span class=K>BEGIN</span>
      <span class=K>IF</span> (rst_n = '0') <span class=K>THEN</span>
         mw_U_2reg_cval <= <span class=S>"00001000"</span>;
      <span class=K>ELSIF</span> (clk'<span class=A>EVENT</span> <span class=K>AND</span> clk='1') <span class=K>THEN</span>
         mw_U_2reg_cval <= dout;
      <span class=K>END</span> <span class=K>IF</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_2seq_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_4' of 'constval'</span>
   gun_col <= <span class=S>"100011100000000001001110"</span>;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_3' of 'mux'</span>
   u_3combo_proc: <span class=K>PROCESS</span>(q, x_coord1, enable)
   <span class=K>BEGIN</span>
      <span class=K>CASE</span> enable <span class=K>IS</span>
      <span class=K>WHEN</span> '0' => dout <= q;
      <span class=K>WHEN</span> '1' => dout <= x_coord1;
      <span class=K>WHEN</span> <span class=K>OTHERS</span> => dout <= (<span class=K>OTHERS</span> => 'X');
      <span class=K>END</span> <span class=K>CASE</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_3combo_proc;

   <span class=C>-- Instance port mappings.</span>
   U_0 : c3_t1_gun_move
      <span class=K>PORT</span> <span class=K>MAP</span> (
         btn     => btn,
         x_place => q,
         x_coord => x_coord1
      );
   U_1 : c3_t1_gun_pixel_decider
      <span class=K>PORT</span> <span class=K>MAP</span> (
         gun_px_idx => gun_px_idx,
         x_in       => q,
         x_coord    => x_coord,
         y_coord    => y_coord
      );

<span class=K>END</span> struct;</pre>
<SCRIPT SRC="../../scripts/is.js"></SCRIPT><SCRIPT SRC="../../scripts/imageFrame.js"></SCRIPT>
</body>
