<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head>
<title></title>
<link rel="Stylesheet" title="hdl2html stylesheet" media="Screen" href="../../scripts/hdl2html.css">
<!-- Generated by HDL Designer -->
<!--    at 11:37:35 on 12/04/20 -->
<script language='javascript'>
function pagesBtn() {
   return '';
}
function panelmenu() {
   return '';
}
</script>
</head>
<body>
<pre>
<span class=C>-- VHDL Entity alien_game_lib.c6_t1_victory_effect.symbol</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - kaakkola.kaakkola (linux-desktop2.tuni.fi)</span>
<span class=C>--          at - 17:39:50 11&#47;27&#47;20</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>ENTITY</span> c6_t1_victory_effect <span class=K>IS</span>
   <span class=K>PORT</span>(
      alien_won     : <span class=A>IN</span>     <span class=T>std_logic</span>;
      clk           : <span class=A>IN</span>     <span class=T>std_logic</span>;
      end_effect_px : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (3 <span class=K>DOWNTO</span> 0);
      rst_n         : <span class=A>IN</span>     <span class=T>std_logic</span>;
      color_bgr     : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (23 <span class=K>DOWNTO</span> 0);
      x_coord       : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      y_coord       : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0)
   );

<span class=C>-- Declarations</span>

<span class=K>END</span> c6_t1_victory_effect ;

<span class=C>--</span>
<span class=C>-- VHDL Architecture alien_game_lib.c6_t1_victory_effect.struct</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - kaakkola.kaakkola (linux-desktop2.tuni.fi)</span>
<span class=C>--          at - 17:39:50 11&#47;27&#47;20</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;


<span class=K>ARCHITECTURE</span> struct <span class=K>OF</span> c6_t1_victory_effect <span class=K>IS</span>

   <span class=C>-- Architecture declarations</span>

   <span class=C>-- Internal signal declarations</span>
   <span class=K>SIGNAL</span> din0   : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> dout   : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> dout1  : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> dout10 : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> dout11 : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> dout12 : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> dout13 : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> dout14 : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> dout15 : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> dout16 : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> dout17 : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> dout18 : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> dout19 : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> dout2  : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> dout20 : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> dout21 : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> dout3  : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> dout4  : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> dout5  : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> dout6  : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> dout7  : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> dout8  : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> dout9  : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);



<span class=K>BEGIN</span>

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_0' of 'constval'</span>
   color_bgr <= <span class=S>"111111111111111111111111"</span>;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_5' of 'constval'</span>
   dout6 <= <span class=S>"00100000"</span>;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_6' of 'constval'</span>
   dout8 <= <span class=S>"00100000"</span>;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_7' of 'constval'</span>
   dout5 <= <span class=S>"01000000"</span>;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_8' of 'constval'</span>
   dout11 <= <span class=S>"01000000"</span>;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_9' of 'constval'</span>
   dout9 <= <span class=S>"10000000"</span>;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_10' of 'constval'</span>
   dout10 <= <span class=S>"00000001"</span>;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_11' of 'constval'</span>
   dout17 <= <span class=S>"00100000"</span>;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_12' of 'constval'</span>
   dout20 <= <span class=S>"00000100"</span>;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_13' of 'constval'</span>
   dout <= <span class=S>"00000010"</span>;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_14' of 'constval'</span>
   dout1 <= <span class=S>"00000100"</span>;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_15' of 'constval'</span>
   din0 <= <span class=S>"00100000"</span>;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_16' of 'constval'</span>
   dout3 <= <span class=S>"01000000"</span>;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_17' of 'constval'</span>
   dout21 <= <span class=S>"10000000"</span>;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_18' of 'constval'</span>
   dout13 <= <span class=S>"00000010"</span>;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_19' of 'constval'</span>
   dout14 <= <span class=S>"00000100"</span>;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_20' of 'constval'</span>
   dout7 <= <span class=S>"01000000"</span>;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_21' of 'constval'</span>
   dout15 <= <span class=S>"00000010"</span>;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_22' of 'constval'</span>
   dout16 <= <span class=S>"00000100"</span>;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_23' of 'constval'</span>
   dout12 <= <span class=S>"00000010"</span>;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_24' of 'constval'</span>
   dout19 <= <span class=S>"00001000"</span>;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_25' of 'constval'</span>
   dout18 <= <span class=S>"00010000"</span>;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_1' of 'mux'</span>
   u_1combo_proc: <span class=K>PROCESS</span>(din0, dout21, alien_won)
   <span class=K>BEGIN</span>
      <span class=K>CASE</span> alien_won <span class=K>IS</span>
      <span class=K>WHEN</span> '0' => dout2 <= din0;
      <span class=K>WHEN</span> '1' => dout2 <= dout21;
      <span class=K>WHEN</span> <span class=K>OTHERS</span> => dout2 <= (<span class=K>OTHERS</span> => 'X');
      <span class=K>END</span> <span class=K>CASE</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_1combo_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_2' of 'mux'</span>
   u_2combo_proc: <span class=K>PROCESS</span>(dout21, din0, alien_won)
   <span class=K>BEGIN</span>
      <span class=K>CASE</span> alien_won <span class=K>IS</span>
      <span class=K>WHEN</span> '0' => dout4 <= dout21;
      <span class=K>WHEN</span> '1' => dout4 <= din0;
      <span class=K>WHEN</span> <span class=K>OTHERS</span> => dout4 <= (<span class=K>OTHERS</span> => 'X');
      <span class=K>END</span> <span class=K>CASE</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_2combo_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_3' of 'mux'</span>
   u_3combo_proc: <span class=K>PROCESS</span>(dout5, dout6, dout13, dout14, dout7, dout8,
                          dout15, dout16, dout9, dout10, dout11, dout12,
                          dout17, dout18, dout19, dout20,
                          end_effect_px)
   <span class=K>BEGIN</span>
      <span class=K>CASE</span> end_effect_px <span class=K>IS</span>
      <span class=K>WHEN</span> <span class=S>"0000"</span> => x_coord <= dout5;
      <span class=K>WHEN</span> <span class=S>"0001"</span> => x_coord <= dout6;
      <span class=K>WHEN</span> <span class=S>"0010"</span> => x_coord <= dout13;
      <span class=K>WHEN</span> <span class=S>"0011"</span> => x_coord <= dout14;
      <span class=K>WHEN</span> <span class=S>"0100"</span> => x_coord <= dout7;
      <span class=K>WHEN</span> <span class=S>"0101"</span> => x_coord <= dout8;
      <span class=K>WHEN</span> <span class=S>"0110"</span> => x_coord <= dout15;
      <span class=K>WHEN</span> <span class=S>"0111"</span> => x_coord <= dout16;
      <span class=K>WHEN</span> <span class=S>"1000"</span> => x_coord <= dout9;
      <span class=K>WHEN</span> <span class=S>"1001"</span> => x_coord <= dout10;
      <span class=K>WHEN</span> <span class=S>"1010"</span> => x_coord <= dout11;
      <span class=K>WHEN</span> <span class=S>"1011"</span> => x_coord <= dout12;
      <span class=K>WHEN</span> <span class=S>"1100"</span> => x_coord <= dout17;
      <span class=K>WHEN</span> <span class=S>"1101"</span> => x_coord <= dout18;
      <span class=K>WHEN</span> <span class=S>"1110"</span> => x_coord <= dout19;
      <span class=K>WHEN</span> <span class=S>"1111"</span> => x_coord <= dout20;
      <span class=K>WHEN</span> <span class=K>OTHERS</span> => x_coord <= (<span class=K>OTHERS</span> => 'X');
      <span class=K>END</span> <span class=K>CASE</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_3combo_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_4' of 'mux'</span>
   u_4combo_proc: <span class=K>PROCESS</span>(dout, dout1, dout2, dout3, dout4,
                          end_effect_px)
   <span class=K>BEGIN</span>
      <span class=K>CASE</span> end_effect_px <span class=K>IS</span>
      <span class=K>WHEN</span> <span class=S>"0000"</span> => y_coord <= dout;
      <span class=K>WHEN</span> <span class=S>"0001"</span> => y_coord <= dout;
      <span class=K>WHEN</span> <span class=S>"0010"</span> => y_coord <= dout;
      <span class=K>WHEN</span> <span class=S>"0011"</span> => y_coord <= dout;
      <span class=K>WHEN</span> <span class=S>"0100"</span> => y_coord <= dout1;
      <span class=K>WHEN</span> <span class=S>"0101"</span> => y_coord <= dout1;
      <span class=K>WHEN</span> <span class=S>"0110"</span> => y_coord <= dout1;
      <span class=K>WHEN</span> <span class=S>"0111"</span> => y_coord <= dout1;
      <span class=K>WHEN</span> <span class=S>"1000"</span> => y_coord <= dout2;
      <span class=K>WHEN</span> <span class=S>"1001"</span> => y_coord <= dout2;
      <span class=K>WHEN</span> <span class=S>"1010"</span> => y_coord <= dout3;
      <span class=K>WHEN</span> <span class=S>"1011"</span> => y_coord <= dout3;
      <span class=K>WHEN</span> <span class=S>"1100"</span> => y_coord <= dout4;
      <span class=K>WHEN</span> <span class=S>"1101"</span> => y_coord <= dout4;
      <span class=K>WHEN</span> <span class=S>"1110"</span> => y_coord <= dout4;
      <span class=K>WHEN</span> <span class=S>"1111"</span> => y_coord <= dout4;
      <span class=K>WHEN</span> <span class=K>OTHERS</span> => y_coord <= (<span class=K>OTHERS</span> => 'X');
      <span class=K>END</span> <span class=K>CASE</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_4combo_proc;

   <span class=C>-- Instance port mappings.</span>

<span class=K>END</span> struct;</pre>
<SCRIPT SRC="../../scripts/is.js"></SCRIPT><SCRIPT SRC="../../scripts/imageFrame.js"></SCRIPT>
</body>
