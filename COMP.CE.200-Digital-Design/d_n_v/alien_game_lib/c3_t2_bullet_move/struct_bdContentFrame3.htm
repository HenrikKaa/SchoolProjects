<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head>
<title></title>
<link rel="Stylesheet" title="hdl2html stylesheet" media="Screen" href="../../scripts/hdl2html.css">
<!-- Generated by HDL Designer -->
<!--    at 11:37:24 on 12/04/20 -->
<script language='javascript'>
function pagesBtn() {
   return '';
}
function panelmenu() {
   return '';
}
</script>
</head>
<body>
<pre>
<span class=C>-- VHDL Entity alien_game_lib.c3_t2_bullet_move.symbol</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - kaakkola.kaakkola (linux-desktop10.tuni.fi)</span>
<span class=C>--          at - 21:46:35 10&#47;26&#47;20</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>ENTITY</span> c3_t2_bullet_move <span class=K>IS</span>
   <span class=K>PORT</span>(
      btn_fire      : <span class=A>IN</span>     <span class=T>std_logic</span>;
      y_in          : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      bullet_flying : <span class=A>OUT</span>    <span class=T>std_logic</span>;
      y_out         : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0)
   );

<span class=C>-- Declarations</span>

<span class=K>END</span> c3_t2_bullet_move ;

<span class=C>--</span>
<span class=C>-- VHDL Architecture alien_game_lib.c3_t2_bullet_move.struct</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - kaakkola.kaakkola (linux-desktop3.tuni.fi)</span>
<span class=C>--          at - 02:39:39 11&#47;23&#47;20</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>LIBRARY</span> alien_game_lib;

<span class=K>ARCHITECTURE</span> struct <span class=K>OF</span> c3_t2_bullet_move <span class=K>IS</span>

   <span class=C>-- Architecture declarations</span>

   <span class=C>-- Internal signal declarations</span>
   <span class=K>SIGNAL</span> data_out : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> dout     : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> dout1    : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout2    : <span class=T>std_logic</span>;


   <span class=C>-- Component Declarations</span>
   <span class=K>COMPONENT</span> c2_t4_right_shifter
   <span class=K>PORT</span> (
      data_in  : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      data_out : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0)
   );
   <span class=K>END</span> <span class=K>COMPONENT</span>;

   <span class=C>-- Optional embedded configurations</span>
   <span class=C>-- pragma synthesis_off</span>
   <span class=K>FOR</span> <span class=K>ALL</span> : c2_t4_right_shifter <span class=K>USE</span> <span class=K>ENTITY</span> alien_game_lib.c2_t4_right_shifter;
   <span class=C>-- pragma synthesis_on</span>


<span class=K>BEGIN</span>

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_4' of 'and'</span>
   dout2 <= btn_fire <span class=K>AND</span> dout1;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_2' of 'constval'</span>
   data_out <= <span class=S>"00100000"</span>;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_5' of 'inv'</span>
   bullet_flying <= <span class=K>NOT</span>(dout1);

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_0' of 'mux'</span>
   u_0combo_proc: <span class=K>PROCESS</span>(dout, data_out, dout2)
   <span class=K>BEGIN</span>
      <span class=K>CASE</span> dout2 <span class=K>IS</span>
      <span class=K>WHEN</span> '0' => y_out <= dout;
      <span class=K>WHEN</span> '1' => y_out <= data_out;
      <span class=K>WHEN</span> <span class=K>OTHERS</span> => y_out <= (<span class=K>OTHERS</span> => 'X');
      <span class=K>END</span> <span class=K>CASE</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_0combo_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_3' of 'nor'</span>
   dout1 <= <span class=K>NOT</span>(y_in(0) <span class=K>OR</span> y_in(1) <span class=K>OR</span> y_in(2) <span class=K>OR</span> y_in(3) <span class=K>OR</span> y_in(4)
            <span class=K>OR</span> y_in(5) <span class=K>OR</span> y_in(6) <span class=K>OR</span> y_in(7));

   <span class=C>-- Instance port mappings.</span>
   U_1 : c2_t4_right_shifter
      <span class=K>PORT</span> <span class=K>MAP</span> (
         data_in  => y_in,
         data_out => dout
      );

<span class=K>END</span> struct;</pre>
<SCRIPT SRC="../../scripts/is.js"></SCRIPT><SCRIPT SRC="../../scripts/imageFrame.js"></SCRIPT>
</body>
