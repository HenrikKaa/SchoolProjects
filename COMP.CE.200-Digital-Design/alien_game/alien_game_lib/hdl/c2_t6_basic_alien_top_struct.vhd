-- VHDL Entity alien_game_lib.c2_t6_basic_alien_top.symbol
--
-- Created:
--          by - kaakkola.kaakkola (linux-desktop9.tuni.fi)
--          at - 17:49:40 10/04/20
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

ENTITY c2_t6_basic_alien_top IS
   PORT( 
      clk       : IN     std_logic;
      enable    : IN     std_logic;
      hit       : IN     std_logic;
      rst_n     : IN     std_logic;
      color_bgr : OUT    std_logic_vector (23 DOWNTO 0);
      defeated  : OUT    std_logic;
      x_coord   : OUT    std_logic_vector (7 DOWNTO 0);
      y_coord   : OUT    std_logic_vector (7 DOWNTO 0)
   );

-- Declarations

END c2_t6_basic_alien_top ;

--
-- VHDL Architecture alien_game_lib.c2_t6_basic_alien_top.struct
--
-- Created:
--          by - kaakkola.kaakkola (linux-desktop2.tuni.fi)
--          at - 14:01:49 11/27/20
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

LIBRARY alien_game_lib;

ARCHITECTURE struct OF c2_t6_basic_alien_top IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL change    : std_logic;
   SIGNAL d         : std_logic_vector(7 DOWNTO 0);
   SIGNAL din3      : std_logic_vector(7 DOWNTO 0);
   SIGNAL direction : std_logic;
   SIGNAL dout      : std_logic_vector(7 DOWNTO 0);
   SIGNAL dout1     : std_logic_vector(1 DOWNTO 0);
   SIGNAL x_coord1  : std_logic_vector(7 DOWNTO 0);
   SIGNAL y_coord1  : std_logic_vector(7 DOWNTO 0);

   -- Implicit buffer signal declarations
   SIGNAL x_coord_internal : std_logic_vector (7 DOWNTO 0);
   SIGNAL y_coord_internal : std_logic_vector (7 DOWNTO 0);


   -- ModuleWare signal declarations(v1.12) for instance 'U_0' of 'adff'
   SIGNAL mw_U_0reg_cval : std_logic_vector(7 DOWNTO 0);

   -- ModuleWare signal declarations(v1.12) for instance 'U_5' of 'adff'
   SIGNAL mw_U_5reg_cval : std_logic_vector(7 DOWNTO 0);

   -- Component Declarations
   COMPONENT c2_t6_alien_direction
   PORT (
      change    : IN     std_logic ;
      clk       : IN     std_logic ;
      enable    : IN     std_logic ;
      rst_n     : IN     std_logic ;
      direction : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT c2_t6_alien_is_hit
   PORT (
      clk            : IN     std_logic ;
      hit            : IN     std_logic ;
      rst_n          : IN     std_logic ;
      alien_col      : OUT    std_logic_vector (23 DOWNTO 0);
      alien_defeated : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT c2_t6_coordinate
   PORT (
      direction : IN     std_logic ;
      place_x   : IN     std_logic_vector (7 DOWNTO 0);
      place_y   : IN     std_logic_vector (7 DOWNTO 0);
      x_coord   : OUT    std_logic_vector (7 DOWNTO 0);
      y_coord   : OUT    std_logic_vector (7 DOWNTO 0)
   );
   END COMPONENT;
   COMPONENT c2_t6_trigger_direction_change
   PORT (
      x_coord : IN     std_logic_vector (7 DOWNTO 0);
      change  : OUT    std_logic 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : c2_t6_alien_direction USE ENTITY alien_game_lib.c2_t6_alien_direction;
   FOR ALL : c2_t6_alien_is_hit USE ENTITY alien_game_lib.c2_t6_alien_is_hit;
   FOR ALL : c2_t6_coordinate USE ENTITY alien_game_lib.c2_t6_coordinate;
   FOR ALL : c2_t6_trigger_direction_change USE ENTITY alien_game_lib.c2_t6_trigger_direction_change;
   -- pragma synthesis_on


BEGIN

   -- ModuleWare code(v1.12) for instance 'U_0' of 'adff'
   x_coord_internal <= mw_U_0reg_cval;
   u_0seq_proc: PROCESS (clk, rst_n)
   BEGIN
      IF (rst_n = '0') THEN
         mw_U_0reg_cval <= "00001000";
      ELSIF (clk'EVENT AND clk='1') THEN
         mw_U_0reg_cval <= d;
      END IF;
   END PROCESS u_0seq_proc;

   -- ModuleWare code(v1.12) for instance 'U_5' of 'adff'
   y_coord_internal <= mw_U_5reg_cval;
   u_5seq_proc: PROCESS (clk, rst_n)
   BEGIN
      IF (rst_n = '0') THEN
         mw_U_5reg_cval <= "00000001";
      ELSIF (clk'EVENT AND clk='1') THEN
         mw_U_5reg_cval <= dout;
      END IF;
   END PROCESS u_5seq_proc;

   -- ModuleWare code(v1.12) for instance 'U_9' of 'constval'
   din3 <= "00000001";

   -- ModuleWare code(v1.12) for instance 'U_8' of 'merge'
   dout1 <= hit & enable;

   -- ModuleWare code(v1.12) for instance 'U_4' of 'mux'
   u_4combo_proc: PROCESS(x_coord_internal, x_coord1, enable)
   BEGIN
      CASE enable IS
      WHEN '0' => d <= x_coord_internal;
      WHEN '1' => d <= x_coord1;
      WHEN OTHERS => d <= (OTHERS => 'X');
      END CASE;
   END PROCESS u_4combo_proc;

   -- ModuleWare code(v1.12) for instance 'U_7' of 'mux'
   u_7combo_proc: PROCESS(y_coord_internal, y_coord1, din3, dout1)
   BEGIN
      CASE dout1 IS
      WHEN "00" => dout <= y_coord_internal;
      WHEN "01" => dout <= y_coord1;
      WHEN "10" => dout <= din3;
      WHEN "11" => dout <= din3;
      WHEN OTHERS => dout <= (OTHERS => 'X');
      END CASE;
   END PROCESS u_7combo_proc;

   -- Instance port mappings.
   U_3 : c2_t6_alien_direction
      PORT MAP (
         change    => change,
         clk       => clk,
         enable    => enable,
         rst_n     => rst_n,
         direction => direction
      );
   U_6 : c2_t6_alien_is_hit
      PORT MAP (
         clk            => clk,
         hit            => hit,
         rst_n          => rst_n,
         alien_col      => color_bgr,
         alien_defeated => defeated
      );
   U_1 : c2_t6_coordinate
      PORT MAP (
         direction => direction,
         place_x   => x_coord_internal,
         place_y   => y_coord_internal,
         x_coord   => x_coord1,
         y_coord   => y_coord1
      );
   U_2 : c2_t6_trigger_direction_change
      PORT MAP (
         x_coord => x_coord1,
         change  => change
      );

   -- Implicit buffered output assignments
   x_coord <= x_coord_internal;
   y_coord <= y_coord_internal;

END struct;
