-- VHDL Entity alien_game_lib.c2_t6_coordinate.symbol
--
-- Created:
--          by - kaakkola.kaakkola (linux-desktop2.tuni.fi)
--          at - 13:25:24 11/27/20
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

ENTITY c2_t6_coordinate IS
   PORT( 
      direction : IN     std_logic;
      place_x   : IN     std_logic_vector (7 DOWNTO 0);
      place_y   : IN     std_logic_vector (7 DOWNTO 0);
      x_coord   : OUT    std_logic_vector (7 DOWNTO 0);
      y_coord   : OUT    std_logic_vector (7 DOWNTO 0)
   );

-- Declarations

END c2_t6_coordinate ;

--
-- VHDL Architecture alien_game_lib.c2_t6_coordinate.struct
--
-- Created:
--          by - kaakkola.kaakkola (linux-desktop2.tuni.fi)
--          at - 13:25:24 11/27/20
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

LIBRARY alien_game_lib;

ARCHITECTURE struct OF c2_t6_coordinate IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL data_out  : std_logic_vector(7 DOWNTO 0);
   SIGNAL data_out1 : std_logic_vector(7 DOWNTO 0);
   SIGNAL data_out2 : std_logic_vector(7 DOWNTO 0);

   -- Implicit buffer signal declarations
   SIGNAL x_coord_internal : std_logic_vector (7 DOWNTO 0);


   -- Component Declarations
   COMPONENT c2_t2_left_shifter
   PORT (
      data_in  : IN     std_logic_vector (7 DOWNTO 0);
      data_out : OUT    std_logic_vector (7 DOWNTO 0)
   );
   END COMPONENT;
   COMPONENT c2_t4_right_shifter
   PORT (
      data_in  : IN     std_logic_vector (7 DOWNTO 0);
      data_out : OUT    std_logic_vector (7 DOWNTO 0)
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : c2_t2_left_shifter USE ENTITY alien_game_lib.c2_t2_left_shifter;
   FOR ALL : c2_t4_right_shifter USE ENTITY alien_game_lib.c2_t4_right_shifter;
   -- pragma synthesis_on


BEGIN

   -- ModuleWare code(v1.12) for instance 'U_2' of 'mux'
   u_2combo_proc: PROCESS(data_out, data_out1, direction)
   BEGIN
      CASE direction IS
      WHEN '0' => x_coord_internal <= data_out;
      WHEN '1' => x_coord_internal <= data_out1;
      WHEN OTHERS => x_coord_internal <= (OTHERS => 'X');
      END CASE;
   END PROCESS u_2combo_proc;

   -- ModuleWare code(v1.12) for instance 'U_4' of 'mux'
   u_4combo_proc: PROCESS(place_y, data_out2, x_coord_internal)
   BEGIN
      CASE x_coord_internal(0) IS
      WHEN '0' => y_coord <= place_y;
      WHEN '1' => y_coord <= data_out2;
      WHEN OTHERS => y_coord <= (OTHERS => 'X');
      END CASE;
   END PROCESS u_4combo_proc;

   -- Instance port mappings.
   U_1 : c2_t2_left_shifter
      PORT MAP (
         data_in  => place_x,
         data_out => data_out1
      );
   U_3 : c2_t2_left_shifter
      PORT MAP (
         data_in  => place_y,
         data_out => data_out2
      );
   U_0 : c2_t4_right_shifter
      PORT MAP (
         data_in  => place_x,
         data_out => data_out
      );

   -- Implicit buffered output assignments
   x_coord <= x_coord_internal;

END struct;
