-- VHDL Entity alien_game_lib.c6_t1_victory_effect.symbol
--
-- Created:
--          by - kaakkola.kaakkola (linux-desktop2.tuni.fi)
--          at - 17:39:50 11/27/20
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

ENTITY c6_t1_victory_effect IS
   PORT( 
      alien_won     : IN     std_logic;
      clk           : IN     std_logic;
      end_effect_px : IN     std_logic_vector (3 DOWNTO 0);
      rst_n         : IN     std_logic;
      color_bgr     : OUT    std_logic_vector (23 DOWNTO 0);
      x_coord       : OUT    std_logic_vector (7 DOWNTO 0);
      y_coord       : OUT    std_logic_vector (7 DOWNTO 0)
   );

-- Declarations

END c6_t1_victory_effect ;

--
-- VHDL Architecture alien_game_lib.c6_t1_victory_effect.struct
--
-- Created:
--          by - kaakkola.kaakkola (linux-desktop2.tuni.fi)
--          at - 17:39:50 11/27/20
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;


ARCHITECTURE struct OF c6_t1_victory_effect IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL din0   : std_logic_vector(7 DOWNTO 0);
   SIGNAL dout   : std_logic_vector(7 DOWNTO 0);
   SIGNAL dout1  : std_logic_vector(7 DOWNTO 0);
   SIGNAL dout10 : std_logic_vector(7 DOWNTO 0);
   SIGNAL dout11 : std_logic_vector(7 DOWNTO 0);
   SIGNAL dout12 : std_logic_vector(7 DOWNTO 0);
   SIGNAL dout13 : std_logic_vector(7 DOWNTO 0);
   SIGNAL dout14 : std_logic_vector(7 DOWNTO 0);
   SIGNAL dout15 : std_logic_vector(7 DOWNTO 0);
   SIGNAL dout16 : std_logic_vector(7 DOWNTO 0);
   SIGNAL dout17 : std_logic_vector(7 DOWNTO 0);
   SIGNAL dout18 : std_logic_vector(7 DOWNTO 0);
   SIGNAL dout19 : std_logic_vector(7 DOWNTO 0);
   SIGNAL dout2  : std_logic_vector(7 DOWNTO 0);
   SIGNAL dout20 : std_logic_vector(7 DOWNTO 0);
   SIGNAL dout21 : std_logic_vector(7 DOWNTO 0);
   SIGNAL dout3  : std_logic_vector(7 DOWNTO 0);
   SIGNAL dout4  : std_logic_vector(7 DOWNTO 0);
   SIGNAL dout5  : std_logic_vector(7 DOWNTO 0);
   SIGNAL dout6  : std_logic_vector(7 DOWNTO 0);
   SIGNAL dout7  : std_logic_vector(7 DOWNTO 0);
   SIGNAL dout8  : std_logic_vector(7 DOWNTO 0);
   SIGNAL dout9  : std_logic_vector(7 DOWNTO 0);



BEGIN

   -- ModuleWare code(v1.12) for instance 'U_0' of 'constval'
   color_bgr <= "111111111111111111111111";

   -- ModuleWare code(v1.12) for instance 'U_5' of 'constval'
   dout6 <= "00100000";

   -- ModuleWare code(v1.12) for instance 'U_6' of 'constval'
   dout8 <= "00100000";

   -- ModuleWare code(v1.12) for instance 'U_7' of 'constval'
   dout5 <= "01000000";

   -- ModuleWare code(v1.12) for instance 'U_8' of 'constval'
   dout11 <= "01000000";

   -- ModuleWare code(v1.12) for instance 'U_9' of 'constval'
   dout9 <= "10000000";

   -- ModuleWare code(v1.12) for instance 'U_10' of 'constval'
   dout10 <= "00000001";

   -- ModuleWare code(v1.12) for instance 'U_11' of 'constval'
   dout17 <= "00100000";

   -- ModuleWare code(v1.12) for instance 'U_12' of 'constval'
   dout20 <= "00000100";

   -- ModuleWare code(v1.12) for instance 'U_13' of 'constval'
   dout <= "00000010";

   -- ModuleWare code(v1.12) for instance 'U_14' of 'constval'
   dout1 <= "00000100";

   -- ModuleWare code(v1.12) for instance 'U_15' of 'constval'
   din0 <= "00100000";

   -- ModuleWare code(v1.12) for instance 'U_16' of 'constval'
   dout3 <= "01000000";

   -- ModuleWare code(v1.12) for instance 'U_17' of 'constval'
   dout21 <= "10000000";

   -- ModuleWare code(v1.12) for instance 'U_18' of 'constval'
   dout13 <= "00000010";

   -- ModuleWare code(v1.12) for instance 'U_19' of 'constval'
   dout14 <= "00000100";

   -- ModuleWare code(v1.12) for instance 'U_20' of 'constval'
   dout7 <= "01000000";

   -- ModuleWare code(v1.12) for instance 'U_21' of 'constval'
   dout15 <= "00000010";

   -- ModuleWare code(v1.12) for instance 'U_22' of 'constval'
   dout16 <= "00000100";

   -- ModuleWare code(v1.12) for instance 'U_23' of 'constval'
   dout12 <= "00000010";

   -- ModuleWare code(v1.12) for instance 'U_24' of 'constval'
   dout19 <= "00001000";

   -- ModuleWare code(v1.12) for instance 'U_25' of 'constval'
   dout18 <= "00010000";

   -- ModuleWare code(v1.12) for instance 'U_1' of 'mux'
   u_1combo_proc: PROCESS(din0, dout21, alien_won)
   BEGIN
      CASE alien_won IS
      WHEN '0' => dout2 <= din0;
      WHEN '1' => dout2 <= dout21;
      WHEN OTHERS => dout2 <= (OTHERS => 'X');
      END CASE;
   END PROCESS u_1combo_proc;

   -- ModuleWare code(v1.12) for instance 'U_2' of 'mux'
   u_2combo_proc: PROCESS(dout21, din0, alien_won)
   BEGIN
      CASE alien_won IS
      WHEN '0' => dout4 <= dout21;
      WHEN '1' => dout4 <= din0;
      WHEN OTHERS => dout4 <= (OTHERS => 'X');
      END CASE;
   END PROCESS u_2combo_proc;

   -- ModuleWare code(v1.12) for instance 'U_3' of 'mux'
   u_3combo_proc: PROCESS(dout5, dout6, dout13, dout14, dout7, dout8, 
                          dout15, dout16, dout9, dout10, dout11, dout12, 
                          dout17, dout18, dout19, dout20, 
                          end_effect_px)
   BEGIN
      CASE end_effect_px IS
      WHEN "0000" => x_coord <= dout5;
      WHEN "0001" => x_coord <= dout6;
      WHEN "0010" => x_coord <= dout13;
      WHEN "0011" => x_coord <= dout14;
      WHEN "0100" => x_coord <= dout7;
      WHEN "0101" => x_coord <= dout8;
      WHEN "0110" => x_coord <= dout15;
      WHEN "0111" => x_coord <= dout16;
      WHEN "1000" => x_coord <= dout9;
      WHEN "1001" => x_coord <= dout10;
      WHEN "1010" => x_coord <= dout11;
      WHEN "1011" => x_coord <= dout12;
      WHEN "1100" => x_coord <= dout17;
      WHEN "1101" => x_coord <= dout18;
      WHEN "1110" => x_coord <= dout19;
      WHEN "1111" => x_coord <= dout20;
      WHEN OTHERS => x_coord <= (OTHERS => 'X');
      END CASE;
   END PROCESS u_3combo_proc;

   -- ModuleWare code(v1.12) for instance 'U_4' of 'mux'
   u_4combo_proc: PROCESS(dout, dout1, dout2, dout3, dout4, 
                          end_effect_px)
   BEGIN
      CASE end_effect_px IS
      WHEN "0000" => y_coord <= dout;
      WHEN "0001" => y_coord <= dout;
      WHEN "0010" => y_coord <= dout;
      WHEN "0011" => y_coord <= dout;
      WHEN "0100" => y_coord <= dout1;
      WHEN "0101" => y_coord <= dout1;
      WHEN "0110" => y_coord <= dout1;
      WHEN "0111" => y_coord <= dout1;
      WHEN "1000" => y_coord <= dout2;
      WHEN "1001" => y_coord <= dout2;
      WHEN "1010" => y_coord <= dout3;
      WHEN "1011" => y_coord <= dout3;
      WHEN "1100" => y_coord <= dout4;
      WHEN "1101" => y_coord <= dout4;
      WHEN "1110" => y_coord <= dout4;
      WHEN "1111" => y_coord <= dout4;
      WHEN OTHERS => y_coord <= (OTHERS => 'X');
      END CASE;
   END PROCESS u_4combo_proc;

   -- Instance port mappings.

END struct;
