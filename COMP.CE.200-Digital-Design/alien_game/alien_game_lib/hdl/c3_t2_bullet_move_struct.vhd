-- VHDL Entity alien_game_lib.c3_t2_bullet_move.symbol
--
-- Created:
--          by - kaakkola.kaakkola (linux-desktop10.tuni.fi)
--          at - 21:46:35 10/26/20
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

ENTITY c3_t2_bullet_move IS
   PORT( 
      btn_fire      : IN     std_logic;
      y_in          : IN     std_logic_vector (7 DOWNTO 0);
      bullet_flying : OUT    std_logic;
      y_out         : OUT    std_logic_vector (7 DOWNTO 0)
   );

-- Declarations

END c3_t2_bullet_move ;

--
-- VHDL Architecture alien_game_lib.c3_t2_bullet_move.struct
--
-- Created:
--          by - kaakkola.kaakkola (linux-desktop3.tuni.fi)
--          at - 02:39:39 11/23/20
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

LIBRARY alien_game_lib;

ARCHITECTURE struct OF c3_t2_bullet_move IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL data_out : std_logic_vector(7 DOWNTO 0);
   SIGNAL dout     : std_logic_vector(7 DOWNTO 0);
   SIGNAL dout1    : std_logic;
   SIGNAL dout2    : std_logic;


   -- Component Declarations
   COMPONENT c2_t4_right_shifter
   PORT (
      data_in  : IN     std_logic_vector (7 DOWNTO 0);
      data_out : OUT    std_logic_vector (7 DOWNTO 0)
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : c2_t4_right_shifter USE ENTITY alien_game_lib.c2_t4_right_shifter;
   -- pragma synthesis_on


BEGIN

   -- ModuleWare code(v1.12) for instance 'U_4' of 'and'
   dout2 <= btn_fire AND dout1;

   -- ModuleWare code(v1.12) for instance 'U_2' of 'constval'
   data_out <= "00100000";

   -- ModuleWare code(v1.12) for instance 'U_5' of 'inv'
   bullet_flying <= NOT(dout1);

   -- ModuleWare code(v1.12) for instance 'U_0' of 'mux'
   u_0combo_proc: PROCESS(dout, data_out, dout2)
   BEGIN
      CASE dout2 IS
      WHEN '0' => y_out <= dout;
      WHEN '1' => y_out <= data_out;
      WHEN OTHERS => y_out <= (OTHERS => 'X');
      END CASE;
   END PROCESS u_0combo_proc;

   -- ModuleWare code(v1.12) for instance 'U_3' of 'nor'
   dout1 <= NOT(y_in(0) OR y_in(1) OR y_in(2) OR y_in(3) OR y_in(4)
            OR y_in(5) OR y_in(6) OR y_in(7));

   -- Instance port mappings.
   U_1 : c2_t4_right_shifter
      PORT MAP (
         data_in  => y_in,
         data_out => dout
      );

END struct;
